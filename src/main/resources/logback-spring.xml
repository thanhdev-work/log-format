<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
    <!--Required to add suffix '-spring' to get app properties. Ex: logback-spring.xml -->
    <springProperty scope="system" name="APP_NAME" source="spring.application.name"/>
    <springProperty scope="context" name="service" source="spring.application.name"/>
    <appender name="CONSOLE_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>OFF</level>
            <onMatch>DENY</onMatch>
        </filter>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <mdc/> <!--Use for multi thread service. MDC variables on the Thread will be written as JSON fields-->
                <context/> <!--Outputs entries from logback's context -->
                <logLevel/>
                <loggerName/>
                <pattern>
                    <pattern>
                        {
                        "requestId" : "%X{RequestId}",
                        "message": "#tryJson{%message}"
                        }
                    </pattern>
                </pattern>
                <threadName/>
                <!-- <message/> -->
                <arguments/> <!--or through StructuredArguments-->
                <logstashMarkers/>
                <stackTrace>
                    <fieldName>stackTrace</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <exclude>net\.sf\.cglib\..*</exclude>
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${APP_NAME}.log</file>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>OFF</level>
            <onMatch>DENY</onMatch>
        </filter>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>OFF</level>
            <onMatch>DENY</onMatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover. Make sure the path matches the one in the file element or else
             the rollover logs are placed in the working directory. -->
            <fileNamePattern>logs/${APP_NAME}-%d{yyyy-MM-dd}.%i.log</fileNamePattern>

            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 7 days' worth of history -->
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp/>
                <mdc/> <!-- MDC variables on the Thread will be written as JSON fields-->
                <context/> <!--Outputs entries from logback's context -->
                <logLevel/>
                <loggerName/>
                <pattern>
                    <pattern>
                        {
                        "requestId" : "%X{RequestId}",
                        "message": "#tryJson{%message}"
                        }
                    </pattern>
                </pattern>
                <threadName/>
                <!-- <message/> -->

                <arguments/> <!--or through StructuredArguments-->

                <stackTrace>
                    <fieldName>stackTrace</fieldName>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <exclude>net\.sf\.cglib\..*</exclude>
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>
    <root level="DEBUG">
        <appender-ref ref="FILE"/>
    </root>
    <root level="INFO">
        <appender-ref ref="CONSOLE_APPENDER"/>
    </root>

</configuration>